openapi: 3.0.0
info:
  title: Zoo API
  description: API untuk manajemen kebun binatang dan karyawan
  version: 1.0.0
paths:
  /zoo:
    get:
      summary: Get list of zoos
      responses:
        '200':
          description: A list of zoos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    species:
                      type: string
                    special_requirements:
                      type: string
  /animals:
    get:
      summary: Get list of animals
      responses:
        '200':
          description: A list of animals
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    zoo_id:
                      type: integer
                    food:
                      type: string
                    origin:
                      type: string
    post:
      summary: Create a new animal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                species:
                  type: string
                food:
                  type: string
                origin:
                  type: string
      responses:
        '201':
          description: Animal created successfully
        '400':
          description: Invalid input
  /animals/{id}:
    get:
      summary: Get a specific animal
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Animal details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  zoo_id:
                    type: integer
                  food:
                    type: string
                  origin:
                    type: string
        '404':
          description: Animal not found
    put:
      summary: Update an animal
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                species:
                  type: string
                food:
                  type: string
                origin:
                  type: string
      responses:
        '200':
          description: Animal updated successfully
        '400':
          description: Invalid input
        '404':
          description: Animal not found
    delete:
      summary: Delete an animal
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Animal deleted successfully
        '404':
          description: Animal not found
  /employees:
    get:
      summary: Get list of employees
      responses:
        '200':
          description: A list of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    role:
                      type: string
                    schedule:
                      type: string
    post:
      summary: Create a new employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                role:
                  type: string
                schedule:
                  type: string
      responses:
        '201':
          description: Employee created successfully
        '400':
          description: Invalid input
  /employees/{id}:
    get:
      summary: Get a specific employee
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Employee details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  role:
                    type: string
                  schedule:
                    type: string
        '404':
          description: Employee not found
    put:
      summary: Update an employee
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                role:
                  type: string
                schedule:
                  type: string
      responses:
        '200':
          description: Employee updated successfully
        '400':
          description: Invalid input
        '404':
          description: Employee not found
    delete:
      summary: Delete an employee
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Employee deleted successfully
        '404':
          description: Employee not found
