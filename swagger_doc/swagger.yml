openapi: 3.0.0
info:
  title: Zoo API
  description: API for managing zoo animals and employees
  version: 1.0.0
paths:
  /zoo:
    get:
      tags:
        - Zoo
      summary: Get a list of zoos
      description: Retrieve a list of all zoos
      responses:
        "200":
          description: List of zoos
          content:
            application/json:
              schema:
                type: object
                properties:
                  zoo:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        species:
                          type: string
                        special_requirements:
                          type: string

  /animals:
    get:
      tags:
        - Animals
      summary: Get list of animals
      description: Retrieve a list of all animals
      responses:
        "200":
          description: A list of animals
          content:
            application/json:
              schema:
                type: object
                properties:
                  animals:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        zoo_id:
                          type: integer
                        food:
                          type: string
                        origin:
                          type: string
    post:
      tags:
        - Animals
      summary: Create a new animal
      description: Create a new animal entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                species:
                  type: string
                food:
                  type: string
                origin:
                  type: string
      responses:
        "201":
          description: Successfully created a new animal
        "400":
          description: Invalid input

  /animals/{id}:
    get:
      tags:
        - Animals
      summary: Get an animal by ID
      description: Retrieve an animal by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An animal
        "404":
          description: Animal not found

    put:
      tags:
        - Animals
      summary: Update an animal by ID
      description: Update an animal entry by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                species:
                  type: string
                food:
                  type: string
                origin:
                  type: string
      responses:
        "200":
          description: Animal updated successfully
        "400":
          description: Invalid input
        "404":
          description: Animal not found

    delete:
      tags:
        - Animals
      summary: Delete an animal by ID
      description: Delete an animal entry by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Animal successfully deleted

  /employees:
    get:
      tags:
        - Employees
      summary: Get a list of employees
      description: Retrieve a list of all employees
      responses:
        "200":
          description: List of employees
          content:
            application/json:
              schema:
                type: object
                properties:
                  employees:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                        phone:
                          type: string
                        role:
                          type: string
                        schedule:
                          type: string
    post:
      tags:
        - Employees
      summary: Create a new employee
      description: Create a new employee entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                role:
                  type: string
                schedule:
                  type: string
      responses:
        "201":
          description: Successfully created a new employee
        "400":
          description: Invalid input

  /employees/{id}:
    get:
      tags:
        - Employees
      summary: Get an employee by ID
      description: Retrieve an employee by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An employee
        "404":
          description: Employee not found

    put:
      tags:
        - Employees
      summary: Update an employee by ID
      description: Update an employee entry by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                role:
                  type: string
                schedule:
                  type: string
      responses:
        "200":
          description: Employee updated successfully
        "400":
          description: Invalid input
        "404":
          description: Employee not found

    delete:
      tags:
        - Employees
      summary: Delete an employee by ID
      description: Delete an employee entry by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Employee successfully deleted
